#
# Pull request check workflow
#
# Runs linter and tests on source branch to check code quality.
#
# see: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
#

name: Check Pull Request
on: [pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        env:
          cache-name: npm-cache
        with:
          path: "web/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Enable Corepack
        run: corepack enable
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          node-version-file: '.nvmrc'
          cache-dependency-path: 'web/yarn.lock'
      - name: Install modules
        run: yarn
        working-directory: ./web
      - name: Run ESLint
        run: yarn lint
        working-directory: ./web
      - name: Run vitest
        run: yarn test
        working-directory: ./web
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23.0"
          cache-dependency-path: go.sum
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.2.0
        with:
          version: v1.61.0
      - run: go version
      - run: go test ./...
